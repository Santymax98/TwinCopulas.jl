struct AMHCopula{P} <: ArchimedeanCopula{P}
    Œ∏::P
    function AMHCopula(Œ∏)
        if !(-1 <= Œ∏ <= 1)
            throw(ArgumentError("El par√°metro Œ∏ debe estar en [-1, 1]"))
        elseif Œ∏ == 0
            return IndependentCopula()
        elseif Œ∏ == 1
            return UtilCopula()
        else
            return new{typeof(Œ∏)}(Œ∏) 
        end
    end
end

ùòô(C::AMHCopula) = C.Œ∏ >= 0 ? 1 + Distributions.Geometric(1 - C.Œ∏) : 1

œï(C::AMHCopula, x) = (1 - C.Œ∏) / (exp(x) - C.Œ∏)

œï‚Åª¬π(C::AMHCopula, x) = log((1 - C.Œ∏) / x + C.Œ∏)

dœï(C::AMHCopula, x) = -((1 - C.Œ∏) * exp(x)) / (exp(x) - C.Œ∏)^2

dœï‚Åª¬π(C::AMHCopula, x) = -(1 - C.Œ∏) / (x * (C.Œ∏ * x + 1 - C.Œ∏))

d¬≤œï(C::AMHCopula, x) = ((1 - C.Œ∏) * exp(x) * (exp(2 * x) - C.Œ∏^2)) / (exp(x) - C.Œ∏)^4

œÑ(C::AMHCopula) = (3 * C.Œ∏ - 2) / (3 * C.Œ∏) - (2 * (1 - C.Œ∏)^2 / (3 * C.Œ∏^2)) * log(1 - C.Œ∏)

œÅ‚Çõ(C::AMHCopula) = (12 * (1 + C.Œ∏) / C.Œ∏^2) * PolyLog.reli2(1 - C.Œ∏) - (24 * (1 - C.Œ∏) / C.Œ∏^2) * log(1 - C.Œ∏) - (3 * (C.Œ∏ + 12) / C.Œ∏)

Œª·µ§(C::AMHCopula) = 0.0

Œª‚Çó(C::AMHCopula) = 0.0