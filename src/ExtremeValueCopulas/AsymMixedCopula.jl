"""
    AsymMixedCopula{P}

Fields:

  - Œ∏::Vector - parameters (size 2)

Constructor

    AsymMixedCopula(Œ∏)

The Asymmetric bivariate Mixed copula is parameterized by two parameters ``\\theta_{i}, i=1,2`` that must meet the following conditions:
* Œ∏‚ÇÅ ‚â• 0
* Œ∏‚ÇÅ+Œ∏‚ÇÇ ‚â§ 1
* Œ∏‚ÇÅ+2Œ∏‚ÇÇ ‚â§ 1
* Œ∏‚ÇÅ+3Œ∏‚ÇÇ ‚â• 0

It is an Extreme value copula with Pickands dependence function: 

```math
A(t) = \\theta_{2}t^3 + \\theta_{1}t^2-(\\theta_1+\\theta_2)t+1
```

It has a few special cases:

- When Œ∏‚ÇÅ = Œ∏‚ÇÇ = 0, it is the Independent Copula
- When Œ∏‚ÇÇ = 0, it is the Mixed Copula

References:
* [Tawn1988](@cite) Bivariate extreme value theory: models and estimation. Biometrika, 1988.
"""
struct AsymMixedCopula{P} <: ExtremeValueCopula{P}
    Œ∏::Vector{P}  # Par√°metros de asimetr√≠a (de tama√±o 2 para el caso bivariado)

    function AsymMixedCopula(Œ∏::Vector{P}) where {P}
        if length(Œ∏) != 2
            throw(ArgumentError("El vector Œ∏ debe tener 2 elementos para el caso bivariado"))
        elseif !(0 <= Œ∏[1])
            throw(ArgumentError("El par√°metro Œ∏‚ÇÅ debe estar ser mayor o igual que 0"))
        elseif  !(Œ∏[1]+Œ∏[2] <= 1) 
            throw(ArgumentError("la suma de Œ∏‚ÇÅ+Œ∏‚ÇÇ ‚â§ 1"))
        elseif !(Œ∏[1]+2*Œ∏[2] <= 1)
            throw(ArgumentError("la suma de Œ∏‚ÇÅ+2Œ∏‚ÇÇ ‚â§ 1"))
        elseif !(0 <= Œ∏[1]+3*Œ∏[2])
            throw(ArgumentError("la suma de 0 ‚â§ Œ∏‚ÇÅ+3Œ∏‚ÇÇ"))
        elseif Œ∏[1] == 0 && Œ∏[2] == 0
            return IndependentCopula()
        else
            return new{P}(Œ∏)
        end
    end
end

# Definir la funci√≥n A espec√≠fica para la copula log√≠stica asim√©trica bivariada
function ùòà(C::AsymMixedCopula, t::Real)
    Œ∏ = C.Œ∏
    
    A = Œ∏[2]*t^3 + Œ∏[1]*t^2-(Œ∏[1]+Œ∏[2])*t+1
    return A
end