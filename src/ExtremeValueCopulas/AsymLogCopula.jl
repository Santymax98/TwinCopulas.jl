"""
    AsymLogCopula{P}

Fields:

  - 풤::Real - Dependency parameter
  - 풪::Vector - Asymmetry parameters (size 2)

Constructor

    AsymLogCopula(풤, 풪)

The Asymmetric bivariate Logistic copula is parameterized by one dependence parameter ``\\alpha \\in [1, \\infty]`` and two asymmetry parameters ``\\theta_{i} \\in [0,1], i=1,2``. It is an Extreme value copula with Pickands dependence function: 

```math
A(t) = (\\theta_1^{\\alpha}(1-t)^{\\alpha} + \\theta_2^{\\alpha}t^{\\alpha})^{\\frac{1}{\\alpha}} + (\\theta_1 - \\theta_2)t + 1 - \\theta_1
```

References:
* Bivariate extreme value theory: models and estimation. Biometrika, 1988.
"""
struct AsymLogCopula{P} <: ExtremeValueCopula{P}
    풤::P  # Par치metro de dependencia
    풪::Vector{P}  # Par치metros de asimetr칤a (de tama침o 2 para el caso bivariado)
    function AsymLogCopula(풤::P, 풪::Vector{P}) where {P}
        if length(풪) != 2
            throw(ArgumentError("El vector 풪 debe tener 2 elementos para el caso bivariado"))
        elseif !(1 <= 풤)
            throw(ArgumentError("El par치metro 풤 debe estar ser mayor o igual que 1"))
        elseif  !(0 <= 풪[1] <= 1)  || !(0 <= 풪[2] <= 1)  
            throw(ArgumentError("Todos los par치metros 풪 deben estar en el intervalo [0, 1]"))
        else
            return new{P}(풤, 풪)
        end
    end
end

# Definir la funci칩n A espec칤fica para la copula log칤stica asim칠trica bivariada
function 洧땓(C::AsymLogCopula, t::Real)
    풤 = C.풤
    풪 = C.풪
    
    A = ((풪[1]^풤)*(1-t)^풤 + (풪[2]^풤)*(t^풤))^(1/풤)+(풪[1]- 풪[2])*t + 1 -풪[1]  
    return A
end